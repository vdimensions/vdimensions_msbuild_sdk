<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <VersionGenerationStrategy Condition=" '$(VersionGenerationStrategy)' == ''">Default</VersionGenerationStrategy>
<!-- 
    <VersionBuildFile>$(BaseIntermediateOutputPath)\$(AssemblyName).Version.Build.txt</VersionBuildFile>
    <VersionBuildPath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), $(VersionBuildFile)))</VersionBuildPath>
    <VersionBuild Condition="Exists('$(VersionBuildPath)')">$([System.IO.File]::ReadAllText($(VersionBuildPath)).Trim())</VersionBuild>
    <VersionBuild Condition="!Exists('$(VersionBuildPath)')">0</VersionBuild>

    <VersionRevisionFile>$(BaseIntermediateOutputPath)\$(AssemblyName).Version.Revision.txt</VersionRevisionFile>
    <VersionRevisionPath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), $(VersionRevisionFile)))</VersionRevisionPath>
    <VersionRevision Condition="Exists('$(VersionRevisionPath)')">$([System.IO.File]::ReadAllText($(VersionRevisionPath)).Trim())</VersionRevision>
    <VersionRevision Condition="!Exists('$(VersionRevisionPath)')">0</VersionRevision>
 -->
  </PropertyGroup>

  <PropertyGroup>
    <CopyrightDaySince Condition=" '$(CopyrightDaySince)' == '' ">1</CopyrightDaySince>
    <CopyrightMonthSince Condition=" '$(CopyrightMonthSince)' == '' ">1</CopyrightMonthSince>
    <CopyrightYearSince Condition=" '$(CopyrightYearSince)' == '' ">2000</CopyrightYearSince>
    <CopyrightYearCurrent Condition=" '$(CopyrightYearCurrent)' == '' ">$([System.DateTime]::get_UtcNow().get_Year())</CopyrightYearCurrent>
  </PropertyGroup>

  <Import Project="AutoVersioning.$(VersionGenerationStrategy).targets" Condition=" '$(VersionGenerationStrategy)' != '' " />

  <PropertyGroup>
    <VersionBuild Condition=" '$(VersionBuild)' == '' ">$(_GeneratedVersionBuild)</VersionBuild>
    <VersionRevision Condition=" '$(VersionRevision)' == '' ">$(_GeneratedVersionRevision)</VersionRevision>
  </PropertyGroup>
    <!-- 
  <Target Name="ResetVersion">
    <ItemGroup>
      <FileToDelete Include="$(VersionBuildFile)" />
      <FileToDelete Include="$(VersionRevisionFile)" />
    </ItemGroup>
    -->
    <!-- <Attrib Files="@(FileToDelete)" ReadOnly="false" /> -->
    <!-- <Delete Files="%(FileToDelete.Identity)" Condition="Exists('%(FileToDelete.Identity)')" /> 
  </Target>
    -->

  <!-- <Target Name="CreateProjectVersionFiles" 
          BeforeTargets="_GenerateProjectRestoreGraph;CoreClean;CoreCompile;CorePack"
          Inputs="$(VersionBuildFile);$(VersionRevisionFile)" 
          Outputs="$(VersionBuildFile);$(VersionRevisionFile)" 
          >
    <WriteLinesToFile File="$(VersionBuildFile)"
                      Lines="$(_GeneratedVersionBuild)"
                      Overwrite="true"
                      Encoding="UTF-8"
                      Condition="!Exists('$(VersionBuildFile)')" />
    <WriteLinesToFile File="$(VersionRevisionFile)"
                      Lines="$(_GeneratedVersionRevision)"
                      Overwrite="true"
                      Encoding="UTF-8"
                      Condition="!Exists('$(VersionRevisionFile)')" />
    <PropertyGroup>
      <VersionBuild Condition="Exists('$(VersionRevisionPath)')">$([System.IO.File]::ReadAllText($(VersionBuildPath)).Trim())</VersionBuild>
      <VersionRevision Condition="Exists('$(VersionRevisionPath)')">$([System.IO.File]::ReadAllText($(VersionRevisionPath)).Trim())</VersionRevision>
    </PropertyGroup>
  </Target> -->
</Project>